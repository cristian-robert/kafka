import re
from pathlib import Path
import os

def escape_quotes(text):
    return text.replace('"', '""')

def parse_feature_to_csv(feature_file, output_csv):
    current_dir = os.path.dirname(os.path.abspath(__file__))
    feature_path = os.path.join(current_dir, feature_file)
    output_path = os.path.join(current_dir, output_csv)
    
    content = Path(feature_path).read_text()
    scenarios = re.finditer(r'Scenario Outline:.*?Examples:(.*?)(?=\n\s*(?:Scenario|$))', content, re.DOTALL)
    
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write('Work Item Type,Title,Test,Step Action,Step Expected,Area Path\n')
        
        for scenario in scenarios:
            text = scenario.group()
            title_match = re.search(r'Scenario Outline:\s*(.*?)(?=\n)', text)
            raw_title = title_match.group(1) if title_match else ''
            
            step_matches = re.finditer(r'(Given|When|Then|And|But)\s+(.+)', text)
            steps = [step.group().strip() for step in step_matches]
            
            table = re.search(r'Examples:.*?\|(.*?)\|\s*\n((?:\s*\|.*\|.*\n?)+)', text, re.DOTALL)
            if table:
                headers = [h.strip() for h in table.group(1).split('|') if h.strip()]
                rows = [row.strip() for row in table.group(2).splitlines() if row.strip()]
                
                for row in rows:
                    values = row.split('|')[1:-1]
                    values_dict = {}
                    for i, header in enumerate(headers):
                        if i < len(values):
                            value = values[i].strip()
                            if value:
                                values_dict[header] = value
                    
                    current_title = raw_title
                    current_steps = steps.copy()
                    
                    for header, value in values_dict.items():
                        value = value.replace('&', 'and')
                        current_title = current_title.replace(f'<{header}>', value)
                        current_steps = [step.replace(f'<{header}>', value) for step in current_steps]
                    
                    current_title = escape_quotes(current_title)
                    current_steps = [escape_quotes(step) for step in current_steps]
                    
                    f.write(f'Test Case,"{current_title}",,,,TestArea\n')
                    for i, step in enumerate(current_steps, 1):
                        f.write(f',,{i},"{step}",Executed successfully,\n')
